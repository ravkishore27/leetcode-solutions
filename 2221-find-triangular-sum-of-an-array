Problem:
https://leetcode.com/contest/biweekly-contest-75/problems/find-triangular-sum-of-an-array/

===================================================================
Constraints
1 <= nums.length <= 1000
0 <= nums[i] <= 9

===================================================================
Explanation
1. Just use two loops.
2. Update the current nums by adding nums[j] + nums[j+1]
3. Ensure to add % 10 

===================================================================
class Solution:
    def triangularSum(self, nums: List[int]) -> int:
        
        n = len(nums)
        
        if n == 1:
            return nums[0]
        
        for i in range(1, n):
            for j in range(n-i):
                nums[j] = (nums[j] + nums[j+1]) % 10
                
        return nums[0]
===================================================================
Time complexity = O(n*n)
Space complexity = O(1)
