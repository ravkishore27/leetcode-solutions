Problem:
https://leetcode.com/contest/biweekly-contest-74/problems/divide-array-into-equal-pairs/

===================================================================
Constraints
nums.length == 2 * n
1 <= n <= 500
1 <= nums[i] <= 500

===================================================================
Explanation
1. Keep a count array for counting.
2. Loop nums to increase the given number count.
3. Count the pairs (which are in 2 always)
4. return true if pairs == n else False.

===================================================================
class Solution:
    def divideArray(self, nums: List[int]) -> bool:
        
        n = len(nums) // 2
        
        count = [0] * 501
        
        for num in nums:
            count[num] += 1
        
        pairs = 0
        
        for i in range(1, len(count)):
            pairs += count[i] // 2
        
        return True if pairs == n else False
===================================================================
Time complexity = O(n*2)
Space complexity = O(n) where n = 500
