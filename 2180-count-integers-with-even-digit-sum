Problem:
https://leetcode.com/contest/weekly-contest-281/problems/count-integers-with-even-digit-sum/

===================================================================
Constraints
1 <= num <= 1000
===================================================================
Explanation
1. Loop from 1 to num
2. Check if the current num is even.
3. To calculate if even, add each digit and see if digit_sum % 2 == 0
4. Count res if digit sum is even.

===================================================================
class Solution:
    def countEven(self, num: int) -> int:
        
        def ifNumEven(num):
            sum = 0
            while num > 0:
                digit = num % 10
                sum += digit
                num = num // 10
            
            if sum % 2 == 0:
                return True
            else:
                return False
        
        res = 0
        for i in range(1, num + 1):
            if ifNumEven(i):
                # print(i)
                res += 1
        return res
===================================================================
Time complexity = O(n)*O(3) ~ O(n)
Space complexity = O(1)
